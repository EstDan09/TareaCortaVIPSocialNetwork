/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Subastas;

import java.io.IOException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author andy2
 */
public class VentanaOferente extends javax.swing.JFrame {
    Oferente jugador; 
    //List<String> nombres = ThreadOferenteySubastador.getNombresDeProductos();
    /**
     * Creates new form VentanaCliente
     */
    
    
    
    public VentanaOferente() throws InterruptedException {
        try{   
            initComponents();
            jugador = new Oferente(this);
            jugador.conexion();
            //System.out.println("Lista de productos: " + ListaProductos.getProductos());       
        }  catch (IOException ex) {
            System.out.println("Error Ventana");
        }
    }
    
    public void actualizarComboBox(List<String> nombres) {
        jComboBoxProductos.removeAllItems();
        for (String nombre : nombres) {
            jComboBoxProductos.addItem(nombre);
        }
    }
    
    public void actualizarMessageBox(String mensaje) {
        JOptionPane.showMessageDialog(this, mensaje, "Mensaje importante", JOptionPane.INFORMATION_MESSAGE);
    }
    
    public void felicitar(){
        JOptionPane.showMessageDialog(null, "¡Felicidades, usted a ganado!", "Mensaje de felicitación", JOptionPane.INFORMATION_MESSAGE);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabelUltimaOferta = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldNuevaOferta = new javax.swing.JTextField();
        jButtonPujar = new javax.swing.JButton();
        jLabelNick = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxProductos = new javax.swing.JComboBox<>();
        jButtonActualizarComboBox = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("Ultima oferta aceptada:");

        jLabelUltimaOferta.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setText("Crear nueva oferta:");

        jTextFieldNuevaOferta.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jTextFieldNuevaOferta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNuevaOfertaActionPerformed(evt);
            }
        });

        jButtonPujar.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jButtonPujar.setText("Pujar");
        jButtonPujar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPujarActionPerformed(evt);
            }
        });

        jLabelNick.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        jLabelNick.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelNick.setText("Oferente");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel3.setText("Productos disponibles:");

        jComboBoxProductos.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jComboBoxProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxProductosActionPerformed(evt);
            }
        });

        jButtonActualizarComboBox.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jButtonActualizarComboBox.setText("Actualizar Productos Disponibles");
        jButtonActualizarComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonActualizarComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelNick, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 510, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonActualizarComboBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBoxProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(36, 36, 36)
                        .addComponent(jLabelUltimaOferta, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldNuevaOferta, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(jButtonPujar, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabelNick)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(jButtonActualizarComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBoxProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelUltimaOferta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldNuevaOferta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonPujar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldNuevaOfertaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNuevaOfertaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNuevaOfertaActionPerformed

    private void jButtonPujarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPujarActionPerformed
        String NuevaOferta = jTextFieldNuevaOferta.getText();
        String UltimaOfertaAceptada = jLabelUltimaOferta.getText();
        String nombreProductoBuscado = jComboBoxProductos.getSelectedItem().toString();
        System.out.println("Producto Buscado:"+ nombreProductoBuscado);
        int NuevaOfertaInt = 0;
        int UltimaOfertaAceptadaInt = 0;
        if (UltimaOfertaAceptada.equals("")) {

        } else {
            UltimaOfertaAceptadaInt = Integer.parseInt(UltimaOfertaAceptada);
        }
        if(NuevaOferta.matches("\\d+")){
            NuevaOfertaInt = Integer.parseInt(NuevaOferta);
        }
        try {
            for (Producto producto : ThreadOferenteySubastador.productosDisponibles) {
                if (producto.getNombre().equals(nombreProductoBuscado)) {
                    String nombreEncontrado = producto.getNombre();
                    String descripcionEncontrada = producto.getDescripcion();
                    int precioInicialEncontrado = producto.getPrecioInicial();
                    int precioFinalEncontrado = producto.getPrecioFinal();
                    int precioActual = producto.getPrecioActualSubasta();

                    if (NuevaOfertaInt <= precioActual) {
                        JOptionPane.showMessageDialog(null, "Oferta rechazada", "Ingrese una oferta válida", JOptionPane.ERROR_MESSAGE);
                        if (UltimaOfertaAceptada.equals("")) {
                            jLabelUltimaOferta.setText(Integer.toString(producto.getPrecioActualSubasta()));
                        }
                    } else {
                        String OfertaAEnviar = NuevaOferta;
                        jTextFieldNuevaOferta.setText("");

                        producto.setPrecioActualSubasta(NuevaOfertaInt);
                        jLabelUltimaOferta.setText(OfertaAEnviar);
                        jugador.salida.writeInt(4);
                        jugador.salida.writeUTF(nombreEncontrado);
                        jugador.salida.writeInt(NuevaOfertaInt);
                        jugador.salida.writeUTF(this.getTitle());
                    }

                    break; 
                }
            }
        } catch (IOException ex) {
            System.out.println("Error");
        }
        
//        if (NuevaOfertaInt <= UltimaOfertaAceptadaInt) {
//            JOptionPane.showMessageDialog(null, "Ingrese una oferta valida", "Oferta rechazada", JOptionPane.ERROR_MESSAGE);
//            for (Producto producto : ThreadOferenteySubastador.productosDisponibles) {
//                    if (producto.getNombre().equals(nombreProductoBuscado)) {
//                        String nombreEncontrado = producto.getNombre();
//                        String descripcionEncontrada = producto.getDescripcion();
//                        int precioInicialEncontrado = producto.getPrecioInicial();
//                        int precioFinalEncontrado = producto.getPrecioFinal();
//                        if(UltimaOfertaAceptada.equals("")){
//                        jLabelUltimaOferta.setText(Integer.toString(producto.getPrecioActualSubasta()));
//                        }
//                        break; 
//                    }
//                }
//        } else {
//            try {
//                String OfertaAEnviar = NuevaOferta;
//                jTextFieldNuevaOferta.setText("");
//                
//                
//                for (Producto producto : ThreadOferenteySubastador.productosDisponibles) {
//                    if (producto.getNombre().equals(nombreProductoBuscado)) {
//                        String nombreEncontrado = producto.getNombre();
//                        String descripcionEncontrada = producto.getDescripcion();
//                        int precioInicialEncontrado = producto.getPrecioInicial();
//                        int precioFinalEncontrado = producto.getPrecioFinal();
//                        producto.setPrecioActualSubasta(NuevaOfertaInt);
//                        jLabelUltimaOferta.setText(OfertaAEnviar);
//                        jugador.salida.writeInt(4);
//                        jugador.salida.writeUTF(nombreEncontrado);
//                        jugador.salida.writeInt(NuevaOfertaInt);
//                        break; 
//                    }
//                }
//            } catch (IOException ex) {
//                System.out.println("Error");
//            }
//        }
    }//GEN-LAST:event_jButtonPujarActionPerformed

    private void jComboBoxProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxProductosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxProductosActionPerformed

    private void jButtonActualizarComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonActualizarComboBoxActionPerformed
       this.setVisible(false);
        SwingUtilities.invokeLater(() -> {
            synchronized (ThreadOferenteySubastador.getNombresDeProductos()) {
                List<String> nombres = ThreadOferenteySubastador.getNombresDeProductos();
                Set<String> nombresUnicos = new HashSet<>(nombres);
                System.out.println(nombres.size());
                System.out.println(nombresUnicos.size());
                jComboBoxProductos.removeAllItems();
                for (String nombre : nombresUnicos) {
                    jComboBoxProductos.addItem(nombre);
                }
            }
        });
        System.out.println("Lista de productos: " + ThreadServer.getProductos2());
        this.setVisible(true);  
    }//GEN-LAST:event_jButtonActualizarComboBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaOferente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaOferente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaOferente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaOferente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new VentanaOferente().setVisible(true);
                } catch (InterruptedException ex) {
                    Logger.getLogger(VentanaOferente.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonActualizarComboBox;
    private javax.swing.JButton jButtonPujar;
    private javax.swing.JComboBox<String> jComboBoxProductos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelNick;
    private javax.swing.JLabel jLabelUltimaOferta;
    private javax.swing.JTextField jTextFieldNuevaOferta;
    // End of variables declaration//GEN-END:variables
}
